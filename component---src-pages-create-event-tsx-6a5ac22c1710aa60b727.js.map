{"version":3,"sources":["webpack:///./src/pages/create-event.tsx"],"names":["Steps","questioners","name","questions","text","SelectQuestioner","onSubmit","React","useState","undefined","questioner","setQuestioner","map","q","key","onChange","e","type","disabled","value","CreateRoom","to","SecondPage","step","setStep","questionSelectedHandler","useCallback","title"],"mappings":"kHAsCKA,E,yDAvBCC,EAA4B,CAChC,CACEC,KAAM,eACNC,UAAW,CACT,CAAEC,KAAM,aACR,CAAEA,KAAM,aACR,CAAEA,KAAM,aACR,CAAEA,KAAM,aACR,CAAEA,KAAM,eAGZ,CACEF,KAAM,eACNC,UAAW,CACT,CAAEC,KAAM,aACR,CAAEA,KAAM,aACR,CAAEA,KAAM,aACR,CAAEA,KAAM,aACR,CAAEA,KAAM,iB,SAKTJ,O,uCAAAA,I,uCAAAA,I,4BAAAA,M,KAUL,IAAMK,EAAmB,SAAC,GAAwC,IAAtCC,EAAsC,EAAtCA,SAAsC,EAC5BC,IAAMC,cACxCC,GADKC,EADyD,KAC7CC,EAD6C,KAIhE,OACE,0BAAML,SAAU,kBAAMI,GAAcJ,EAASI,KAC3C,mDACCT,EAAYW,KAAI,SAAAC,GAAK,IACZX,EAAoBW,EAApBX,KAAMC,EAAcU,EAAdV,UACd,OACE,yBAAKW,IAAKZ,GACR,+BACE,2BACEa,SAAU,SAAAC,GAAC,OAAIL,EAAcE,IAC7BI,KAAK,QACLf,KAAK,cAENA,GAEH,4BACGC,EAAUS,KAAI,gBAAGR,EAAH,EAAGA,KAAH,OACb,wBAAIU,IAAKV,GACP,2BAAIA,YAOhB,2BAAOa,KAAK,SAASC,UAAWR,EAAYS,MAAM,aAKlDC,EAAa,SAAC,GAId,QAHJV,WAAcR,EAGV,EAHUA,KAAMC,EAGhB,EAHgBA,UAIpB,OACE,6BACE,0CACA,yBAAKW,IAAKZ,GACR,4BAAKA,GACL,4BACGC,EAAUS,KAAI,gBAAGR,EAAH,EAAGA,KAAH,OACb,wBAAIU,IAAKV,GACP,2BAAIA,SAKZ,gCACE,kBAAC,OAAD,CAAMiB,GAAI,mBAAV,yCAkCOC,UA5BI,WAAM,MACaf,IAAMC,cACxCC,GADKC,EADgB,KACJC,EADI,OAICJ,IAAMC,SAASR,EAAMK,kBAAtCkB,EAJgB,KAIVC,EAJU,KAMjBC,EAA0BlB,IAAMmB,aAAY,SAAAb,GAChDF,EAAcE,GACdW,EAAQxB,EAAMoB,cACb,IAIH,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKO,MAAM,aAEVJ,IAASvB,EAAMK,kBACd,kBAACA,EAAD,CAAkBC,SAAUmB,IAE7BF,IAASvB,EAAMoB,YAAcV,GAC5B,kBAACU,EAAD,CAAYV,WAAYA,IAE1B,kBAAC,OAAD,CAAMW,GAAG,KAAT","file":"component---src-pages-create-event-tsx-6a5ac22c1710aa60b727.js","sourcesContent":["import React from \"react\"\r\nimport { Link } from \"gatsby\"\r\n\r\nimport Layout from \"../components/Layout\"\r\nimport SEO from \"../components/SEO\"\r\n\r\ninterface Question {\r\n  text: string\r\n}\r\n\r\ninterface Questioner {\r\n  name: string\r\n  questions: Question[]\r\n}\r\n\r\nconst questioners: Questioner[] = [\r\n  {\r\n    name: \"questioner 1\",\r\n    questions: [\r\n      { text: \"quetion 1\" },\r\n      { text: \"quetion 2\" },\r\n      { text: \"quetion 3\" },\r\n      { text: \"quetion 4\" },\r\n      { text: \"quetion 5\" },\r\n    ],\r\n  },\r\n  {\r\n    name: \"questioner 2\",\r\n    questions: [\r\n      { text: \"quetion 1\" },\r\n      { text: \"quetion 2\" },\r\n      { text: \"quetion 3\" },\r\n      { text: \"quetion 4\" },\r\n      { text: \"quetion 5\" },\r\n    ],\r\n  },\r\n]\r\n\r\nenum Steps {\r\n  SelectQuestioner,\r\n  CreateQuestioner,\r\n  CreateRoom,\r\n}\r\n\r\ntype SelectQuestionerProps = { onSubmit: (q: Questioner) => void }\r\n\r\n// todo: we need a page that can display and edit questioner and question\r\n\r\nconst SelectQuestioner = ({ onSubmit }: SelectQuestionerProps) => {\r\n  const [questioner, setQuestioner] = React.useState<Questioner | undefined>(\r\n    undefined\r\n  )\r\n  return (\r\n    <form onSubmit={() => questioner && onSubmit(questioner)}>\r\n      <h2>Select a questioner</h2>\r\n      {questioners.map(q => {\r\n        const { name, questions } = q\r\n        return (\r\n          <div key={name}>\r\n            <label>\r\n              <input\r\n                onChange={e => setQuestioner(q)}\r\n                type=\"radio\"\r\n                name=\"questions\"\r\n              />\r\n              {name}\r\n            </label>\r\n            <ol>\r\n              {questions.map(({ text }) => (\r\n                <li key={text}>\r\n                  <p>{text}</p>\r\n                </li>\r\n              ))}\r\n            </ol>\r\n          </div>\r\n        )\r\n      })}\r\n      <input type=\"submit\" disabled={!questioner} value=\"Create\" />\r\n    </form>\r\n  )\r\n}\r\n\r\nconst CreateRoom = ({\r\n  questioner: { name, questions },\r\n}: {\r\n  questioner: Questioner\r\n}) => {\r\n  return (\r\n    <div>\r\n      <h2>Questioner</h2>\r\n      <div key={name}>\r\n        <h4>{name}</h4>\r\n        <ol>\r\n          {questions.map(({ text }) => (\r\n            <li key={text}>\r\n              <p>{text}</p>\r\n            </li>\r\n          ))}\r\n        </ol>\r\n      </div>\r\n      <button>\r\n        <Link to={\"/room-dashboard\"}> Open a room from this questioner </Link>\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst SecondPage = () => {\r\n  const [questioner, setQuestioner] = React.useState<Questioner | undefined>(\r\n    undefined\r\n  )\r\n  const [step, setStep] = React.useState(Steps.SelectQuestioner)\r\n\r\n  const questionSelectedHandler = React.useCallback(q => {\r\n    setQuestioner(q)\r\n    setStep(Steps.CreateRoom)\r\n  }, [])\r\n\r\n  // setStep(Steps.CreateRoom)\r\n\r\n  return (\r\n    <Layout>\r\n      <SEO title=\"Page two\" />\r\n\r\n      {step === Steps.SelectQuestioner && (\r\n        <SelectQuestioner onSubmit={questionSelectedHandler} />\r\n      )}\r\n      {step === Steps.CreateRoom && questioner && (\r\n        <CreateRoom questioner={questioner} />\r\n      )}\r\n      <Link to=\"/\">Go back to the homepage</Link>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default SecondPage\r\n"],"sourceRoot":""}